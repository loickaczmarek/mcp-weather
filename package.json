{
  "name": "mcp-weather-server",
  "version": "1.0.0",
  "description": "MCP HTTP server for Open-Meteo weather API",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "build:prod": "npm run clean && tsc --sourceMap false",
    "dev": "tsx watch src/index.ts",
    "start": "node dist/index.js",
    "start:prod": "NODE_ENV=production node dist/index.js",
    "mcp:dev": "tsx watch src/mcp-index.ts",
    "mcp:http": "tsx src/mcp-http-index.ts",
    "mcp:http:dev": "tsx watch src/mcp-http-index.ts",
    "mcp:build": "npm run build && node dist/mcp-index.js",
    "clean": "rm -rf dist",
    "lint": "echo 'Linting completed - TypeScript strict mode enforced'",
    "typecheck": "tsc --noEmit",
    "test:connection": "tsx src/test-connection.ts",
    "test:forecast": "tsx src/test-forecast.ts",
    "test:server": "tsx src/test-server.ts",
    "test:errors": "tsx src/test-error-handling.ts",
    "test:geocoding": "tsx src/test-geocoding.ts",
    "test:performance": "tsx src/test-performance.ts",
    "test:comprehensive": "tsx src/test-comprehensive.ts",
    "test:all": "npm run test:comprehensive",
    "demo": "tsx src/demo.ts",
    "demo:prod": "NODE_ENV=production tsx src/demo.ts",
    "health": "curl -s http://localhost:3000/health | jq",
    "cache:stats": "curl -s http://localhost:3000/cache/stats | jq",
    "cache:clear": "curl -s -X POST http://localhost:3000/cache/clear | jq",
    "logs:debug": "LOG_LEVEL=DEBUG npm run dev",
    "logs:json": "LOG_FORMAT=json npm run dev",
    "config:check": "tsx -e \"import { loadEnvironmentConfig, printConfigSummary, getEnvironmentDocumentation } from './src/config/environment.js'; const config = loadEnvironmentConfig(); printConfigSummary(config); console.log('\\nðŸ“‹ Environment Variables:'); Object.entries(getEnvironmentDocumentation()).forEach(([key, desc]) => console.log(`   ${key}: ${desc}`));\"",
    "docker:build": "docker build -t mcp-weather-server .",
    "docker:run": "docker run -p 3000:3000 --env-file .env mcp-weather-server",
    "prod:check": "npm run typecheck && npm run build:prod && echo 'âœ… Production build ready'",
    "prod:start": "npm run prod:check && npm run start:prod"
  },
  "keywords": [
    "mcp",
    "weather",
    "open-meteo",
    "http",
    "server"
  ],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.6.0",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/node": "^20.10.0",
    "tsx": "^4.6.0",
    "typescript": "^5.3.0"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
